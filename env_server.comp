#!/usr/bin/env bash
# shellcheck disable=SC1090
# Copyright (C) 2017-2018 Albert I (krasCGQ)
# SPDX-License-Identifier: GPL-3.0-or-later

# Import common bash completion
. "${HOME}"/scripts/env_common.comp

# Use Central Indonesia Time
export TZ=Asia/Makassar

# Export GOPATH early for checking
export GOPATH=${HOME}/go

# Other variables used around this script
CTNGCOMP=${HOME}/src/ct-ng/bash-completion/ct-ng
TRANSFERSH=${HOME}/scripts/transfer.sh

# If 'hostname' returns botstack, set up caddy & http-server aliases
if [[ $(hostname) == botstack ]]; then
    alias caddy='caddy -quic -quiet -conf ${HOME}/Caddyfile &'
    alias http-server='http-server -a 0.0.0.0 -p 9001 >> /dev/null &'
fi

# If GOPATH doesn't exist, unset it
[[ ! -d ${GOPATH} ]] && \
    unset GOPATH

# Export local binary paths
export PATH=${HOME}/.local/bin:${PATH}
[[ -d ${GOPATH} ]] && \
    export PATH=${GOPATH}/bin:${PATH}

# crosstool-ng
[[ -f ${CTNGCOMP} ]] && \
    . "${CTNGCOMP}"

# transfer.sh
[[ -f ${TRANSFERSH} ]] && \
    . "${TRANSFERSH}"

# Shortcut for ssh-agent setup
function ssh_setup {
    # Do an unconditional check
    [[ ! -f ${HOME}/.ssh/id_ed25519 ]] && \
        echo "! Please generate an SSH key before using this command." && \
        return 1

    # The actual setup is here
    eval "$(ssh-agent -s)"
    ssh-add "${HOME}"/.ssh/id_ed25519
}

# Sign ROM zip before release
# Reference and why: https://source.android.com/devices/tech/ota/sign_builds
function rom_sign {
    # Must be run at root of ROM source
    [[ ! -d $(pwd)/build/tools ]] && \
        echo "! This function must be run at root of ROM source!" && \
        return 1

    # Make sure only one target files package exists prior to running the function
    [[ $(find "$(pwd)/out/dist" -name "*target_files*" | wc -l) -ne 1 ]] && \
        echo "! Less or more than one target files package detected!" && \
        return 1

    # Must have signing keys in .android-certs at root of home folder before proceeding
    for SIGNKEYS in {media,platform,releasekey,shared}.{pk8,x509.pem}; do
        [[ ! -f ${HOME}/.android-certs/${SIGNKEYS} ]] && \
            echo "! Missing one or more signing keys in ${HOME}/.android-certs folder!" && \
            break && \
            return 1
    done

    # Sign target files package
    ./build/tools/releasetools/sign_target_files_apks \
        -o -d "${HOME}"/.android-certs \
        out/dist/*-target_files-*.zip \
        signed-target_files.zip \
        || return 1

    # Convert signed target files package to signed OTA package
    ./build/tools/releasetools/ota_from_target_files \
        --block --backup=true \
        -k "${HOME}"/.android-certs/releasekey \
        signed-target_files.zip \
        signed-ota_update.zip \
        || return 1

    # Cleanup
    rm -f signed-target_files.zip
    rm -rf out/dist/*
}

# Last, but my most convenient part
# shellcheck disable=SC1117
export PS1="\[\e[1;32m\]\u@\h\[\e[1;37m\] \W\[\e[1;33m\]\`parse_git_branch\`\[\e[1;32m\] \$\[\e[0m\] "
