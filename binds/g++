#!/usr/bin/env bash
# Clang C++ compiler alias for G++
# Copyright (C) 2018 Albert I (krasCGQ)
# SPDX-License-Identifier: GPL-3.0-or-later

# This script is designed to be executed on several environments that hardcoded
# use of GCC while Clang can also be used to compile codes (i.e. DKMS).
# Please bind mount this file with any app of your choice, i.e.:
#     mount --bind /path/to/this/g++/script /usr/bin/g++

# Default distribution's Clang path; abort if it doesn't exist
DEFAULT_PATH=$(command -v clang++ || exit 1)

# Define custom Clang path if any
CLANG_PATH=/opt/kud/clang-9.x/bin/clang++

# Warnings to disable (if any)
WARNINGS=( "address-of-packed-member" "gnu-variable-sized-type-not-at-end"
	   "unknown-warning-option" )

# Additional flags to be passed to compiler options (if any)
FLAGS=( "-O3" "-mfentry" "-pg" )

# Check if compiler exists and executable
if [[ -x ${CLANG_PATH} ]]; then
    CLANG_EXECUTABLE=${CLANG_PATH}
elif [[ -x ${DEFAULT_PATH} ]]; then
    CLANG_EXECUTABLE=${DEFAULT_PATH}
fi

# Parse WARNINGS and turn it into DISABLE_WARNINGS
for ITEM in "${WARNINGS[@]}"; do
    DISABLE_WARNINGS+=( "-Wno-${ITEM}" )
done

# Actual command - please note that "${@}" can't be quoted
# shellcheck disable=SC2068
${CLANG_EXECUTABLE} "${DISABLE_WARNINGS[@]}" "${FLAGS[@]}" ${@}

exit ${?}
