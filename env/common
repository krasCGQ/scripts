#!/usr/bin/env bash
# shellcheck disable=SC1117,SC2034
# Copyright (C) 2017-2018 Albert I (krasCGQ)
# SPDX-License-Identifier: GPL-3.0-or-later

# Text styles
BLD="\033[1m"
RST="\033[0m"

# Set up common aliases
alias echo='echo -e'
alias nano='nano -FISWaiuwx'
alias wget='wget -c -t 0 --retry-connrefused'

# Required for GPG signing
GPG_TTY=$(tty)
export GPG_TTY

# GNU nano for text editor
export EDITOR=nano

# Use ccache for faster compiling
export USE_CCACHE=true

# My identity in nutshell (kernel)
export KBUILD_BUILD_USER=krasCGQ
export KBUILD_BUILD_HOST=KudProject

# Prints a message with a dash
function info {
    echo "- ${1}"
}

# Prints a message with an exclamation point
function warn {
    echo "! ${1}" >&2
    while [[ ${#} -ge 2 ]]; do
        echo "  ${2}" >&2
        shift
    done
}

# Parse current branch in git repository
function parse_git_branch {
    BRANCH=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
    if [[ ! -z ${BRANCH} ]]; then
        # Don't give extra brackets if project isn't at any branch or is currently detached
        [[ ${BRANCH} != "("* && ${BRANCH} != *")" ]] && \
            BRANCH="(${BRANCH})"

        # This is what we want to stdout
        echo " ${BRANCH}"
    fi
}

# Upload a file to a Telegram chat
# Usage: tg_upload <file>
function tg_upload {
    # Import Telegram bot token and chat ID
    SCRIPTDIR=${HOME}/KudProject/scripts
    TOKEN=$(cat "${SCRIPTDIR}"/tg_token)
    CHATID=$(< "${SCRIPTDIR}"/tg_chatid head -n 1 -c 14) # KudProject Community

    # If no file is about to be uploaded, bail out
    [[ -z ${1} ]] && \
        warn "Please provide a file to upload!" && \
        return 1

    # Upload it!
    curl -s https://api.telegram.org/bot"${TOKEN}"/sendDocument \
        -F chat_id="${CHATID}" \
        -F document=@"${1}" \
        >> /dev/null
}
